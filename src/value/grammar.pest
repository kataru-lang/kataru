Program = _{ SOI ~ Expr ~ EOF }

// Expressions
Expr = _{ BinaryExpr | UnaryExpr }
UnaryExpr = { UnaryOperator ~ Term }
BinaryExpr = { (Term ~ BinaryOperator)* ~ Term }
Term = _{ Atom | UnaryExpr | "(" ~ Expr ~ ")" }

// Operators
Operator = _{ UnaryOperator | BinaryOperator }
UnaryOperator = _{ Not | Add | Sub }
BinaryOperator = _{ Add | Sub | Mul | Div | And | Or | Eq | Neq | Leq | Lt | Geq | Gt}
Not = { "not" }
Add = { "+" }
Sub = { "-" }
Mul = { "*" }
Div = { "/" }
And = { "and" }
Or = { "or" }
Eq = { "==" }
Neq = { "!=" }
Leq = { "<=" }
Lt = { "<" }
Geq = { ">=" }
Gt = { ">" }

// Strings
UnsafeStringChar = _{"\"" | "(" | ")" | NEWLINE}
NonQuoteWhitespaceChar = _{!(UnsafeStringChar | WHITESPACE) ~ ANY}
NonQuoteNewlineChar = _{!UnsafeStringChar ~ ANY}
UnquotedString = _{ !UnaryOperator ~ NonQuoteWhitespaceChar+ }
String = @{ NonQuoteNewlineChar* }
QuotedString = _{"\"" ~ String ~ "\""}

// Values
Number = {(Add | Sub)? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)?}
Bool = _{ "true" | "false" }
Value = @{ Number | Bool | UnquotedString }

// Variables
VariableRef = _{ "$" ~ Variable }
Variable = @{ UnquotedString }

Atom = _{QuotedString | VariableRef | Value}

// Override builtins
WHITESPACE = _{ " " | "\t" }
EOF = _{ EOI | ";" }
